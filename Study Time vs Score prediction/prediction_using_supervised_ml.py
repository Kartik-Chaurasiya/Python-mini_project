# -*- coding: utf-8 -*-
"""Prediction using Supervised ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/Syntax-code/Machine-Learning/blob/master/sparks/Prediction_using_Supervised_ML.ipynb
"""

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/gdrive')
# %cd /gdrive

"""##Importing dataset"""

import pandas  as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv("/gdrive/MyDrive/csv/student_scores - student_scores.csv")
df.head()

"""##dataset description

####. Contains 2 Columns i.e 'Hours' and 'Scores'
####. Number of Rows = 25 
"""

df.shape

df.info()

df.describe()

""". The Hours range from, min = 1.1 to max = 9.2(when does he sleep).
 
 . The Scores range from, min=17(well passing is now difficult) to max = 95.

## Graphs
"""

plt.bar(df['Hours'], df['Scores'], label='Study hours VS Scores')
plt.legend()
plt.show()

"""This is a straight forward a linear regression problem as it shows, that the more u study the more marks u get(Well that's what is true for us too).

## Linear Regression model
"""

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

x = np.array(df['Hours']).reshape(-1, 1)
y = np.array(df['Scores'])

linear_regression = LinearRegression()
linear_regression.fit(x, y)

y_pred = linear_regression.predict(x)
rmse = mean_squared_error(y, y_pred)
print("Root mean error = {}".format(rmse))

"""## What will be predicted score if a student studies for 9.25 hrs/ day? 

"""

hours = [[9.25]]
ans = linear_regression.predict(hours)
print("If a student studies for 9.25hrs/day the predicted score is: {}".format(ans))

"""What if this guy just study and not do a thing lets take hours == 15(hahahahaha)"""

hours = [[15]]
ans = linear_regression.predict(hours)
print("If a student studies for 15hrs/day the predicted score is: {}".format(ans))

"""hahahaha he will go beyond the max marks on the score i.e 100, 
well computers are sure funny.

Well I analyzed the dataset, saw the transition of the data i.e linear and then used linear regression to predict the result.

Save the model
"""

import pickle
pickle.dump(linear_regression, open("/content/model.pkl", "wb"))